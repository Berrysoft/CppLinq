cmake_minimum_required(VERSION 3.1)
project(CppLinq)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
include_directories(include)

if(WIN32)
  string(REGEX MATCH "10.0[.[0-9]+]?" MATCH_WINDOWS_10 ${CMAKE_SYSTEM_VERSION})
  string(LENGTH "${MATCH_WINDOWS_10}" MATCH_WINDOWS_10_LENGTH)
  if(${MATCH_WINDOWS_10_LENGTH})
    message("You are running on Windows 10")
    set(IS_WINDOWS_10 true)
  endif()
endif()

function(add_headers VAR)
  set(headers ${${VAR}})
  foreach (header ${ARGN})
    set(headers ${headers} include/linq/${header})
  endforeach()
  set(${VAR} ${headers} PARENT_SCOPE)
endfunction()

add_headers(SF_HEADERS core.hpp query.hpp aggregate.hpp to_container.hpp string.hpp)

if (IS_WINDOWS_10)
  add_headers(SF_HEADERS winrt.hpp)
  add_definitions(-DLINQ_USE_WINRT)
endif()

install(FILES ${SF_HEADERS} DESTINATION include/linq)

find_path(BSTEST_INCLUDE_DIR NAMES bstest.hpp)
file(GLOB TEST_SOURCE "test/*.cpp")
add_executable(test ${TEST_SOURCE})
target_include_directories(test PRIVATE ${BSTEST_INCLUDE_DIR})

if (IS_WINDOWS_10)
  target_link_libraries(test WindowsApp.lib)
endif()
